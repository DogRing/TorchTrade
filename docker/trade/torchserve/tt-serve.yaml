apiVersion: v1
kind: Service
metadata:
  name: serve-segrnn
  namespace: ttrade
spec:
  selector:
    app: serve-segrnn
  ports:
    - port: 8080
      targetPort: 8080
      name: inference
    - port: 8081
      targetPort: 8081
      name: management
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serve-segrnn
  namespace: ttrade
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serve-segrnn
  template:
    metadata:
      labels:
        app: serve-segrnn
    spec:
      tolerations:
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app: serve-segrnn
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: serve-model
        image: dogring/tt-serve:1.0
        imagePullPolicy: Always
        env:
        - name: MODEL_NAME
          value: "seg_rnn"
        - name: EXTRA_FILES
          value: "config.json,param.pth,Model.py,RevIN.py"
        ports:
        - containerPort: 8080
          name: inference
        - containerPort: 8081
          name: management
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        volumeMounts:
        - name: smb
          mountPath: "/home/model-server/param.pth"
          subPath: "ttrade/model/SegRNN/results/SegRNN.pth"
          readOnly: true
        - name: smb
          mountPath: "/home/model-server/Model.py"
          subPath: "ttrade/model/SegRNN/Model.py"
          readOnly: true
        - name: smb
          mountPath: "/home/model-server/RevIN.py"
          subPath: "ttrade/model/SegRNN/RevIN.py"
          readOnly: true
        - name: config
          mountPath: "/home/model-server/config.json"
          subPath: "config.json"
          readOnly: true
      volumes:
      - name: smb
        persistentVolumeClaim:
          claimName: pvc-smb
      - name: config
        configMap:
          name: train-config
          items:
          - key: model.json
            path: config.json
      restartPolicy: Always
      